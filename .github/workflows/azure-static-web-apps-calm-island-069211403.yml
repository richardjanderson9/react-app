name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  actions: write
  deployments: write

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      # === SETUP PHASE ===
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false
          persist-credentials: false
          
      - name: 🧹 Clean Git Config
        run: |
          git config --local --unset-all http.https://github.com/.extraheader || true

      - name: 💾 Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: 📦 Install Dependencies
        run: npm install

      # === QUALITY & TESTING PHASE ===
      - name: 🔍 Lint Code
        run: npm run lint || echo "Linting issues found"
      
      - name: 🛡️ Security Scan
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: 🛠 Fix Vulnerabilities
        run: npm audit fix
        continue-on-error: true
        
      - name: 🧪 Run Tests
        run: npm test || echo "No tests found, continuing deployment"
        continue-on-error: true
        
      # === BUILD & DEPLOY PHASE ===
      - name: 🔨 Build Application
        run: npm run build
          
      - name: 🚀 Deploy to Azure
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_CALM_ISLAND_069211403 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} 
          action: "upload"
          app_location: "/"
          api_location: ""
          output_location: "build"

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: 🔒 Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_CALM_ISLAND_069211403 }}
          action: "close"

  push_to_vultr:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    name: Push to Vultr Container Registry
    continue-on-error: true  # This ensures workflow continues even if this job fails
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔨 Build Docker Image
        run: |
          if [ -f Dockerfile ]; then
            docker build -t ${{ secrets.VULTR_REGISTRY }}/my-react-app:latest .
          else
            echo "::error::Dockerfile not found in repository root"
            exit 1
          fi

      - name: 🔓 Login to Vultr
        run: docker login -u ${{ secrets.VULTR_USER }} -p ${{ secrets.VULTR_API_KEY }} ${{ secrets.VULTR_REGISTRY }}

      - name: 📤 Push Docker Image
        run: docker push ${{ secrets.VULTR_REGISTRY }}/my-react-app:latest
